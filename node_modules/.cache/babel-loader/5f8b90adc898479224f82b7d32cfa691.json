{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pegatech/Downloads/todo_react_app/src/feature/todo/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.title : '');\n  const [description, setDescription] = useState(props.edit ? props.edit.description : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      title: input,\n      description: 'Dec' + Math.floor(Math.random() * 10000)\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row justify-content-center pt-5 pl-3 pr-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit text-black-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row justify-content-center pt-5 pl-3 pr-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input text-black-50\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input text-black-50\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"41FKcLKTCLfinuu5XzGOMDBsPYc=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/pegatech/Downloads/todo_react_app/src/feature/todo/TodoForm.jsx"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","title","description","setDescription","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","Math","floor","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWE,WAAxB,GAAsC,EAAvC,CAA9C;AACA,QAAME,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAf,IAAAA,KAAK,CAACgB,QAAN,CAAe;AACbZ,MAAAA,KAAK,EAAEH,KADM;AAEbI,MAAAA,WAAW,EAAE,QAAQY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B;AAFR,KAAf;AAKAjB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAA,cACGd,KAAK,CAACG,IAAN,gBACC;AAAS,MAAA,SAAS,EAAC,2CAAnB;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAES,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,GAAG,EAAEH,QALP;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAA+B,QAAA,SAAS,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAeG;AAAS,MAAA,SAAS,EAAC,2CAAnB;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,KAAK,EAAEb,KAFT;AAGE,QAAA,QAAQ,EAAES,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,0BALZ;AAME,QAAA,GAAG,EAAEH;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,KAAK,EAAEF,WAFT;AAGE,QAAA,QAAQ,EAAEK,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,0BALZ;AAME,QAAA,GAAG,EAAEH;AANP;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBN;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAlEQf,Q;;KAAAA,Q;AAoET,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n\n  const [input, setInput] = useState(props.edit ? props.edit.title : '');\n  const [description, setDescription] = useState(props.edit ? props.edit.description : '')\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      title: input,\n      description: 'Dec' + Math.floor(Math.random() * 10000)\n    });\n\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <section className=\"row justify-content-center pt-5 pl-3 pr-3\">\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit text-black-50'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </section>\n      ) : (\n          <section className=\"row justify-content-center pt-5 pl-3 pr-3\">\n            <input\n              placeholder='Title'\n              value={input}\n              onChange={handleChange}\n              name='text'\n              className='todo-input text-black-50'\n              ref={inputRef}\n            />\n            <input\n              placeholder='Description'\n              value={description}\n              onChange={handleChange}\n              name='text'\n              className='todo-input text-black-50'\n              ref={inputRef}\n            />\n            <button onClick={handleSubmit} className='todo-button'>\n              Add todo\n          </button>\n          </section>\n        )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}