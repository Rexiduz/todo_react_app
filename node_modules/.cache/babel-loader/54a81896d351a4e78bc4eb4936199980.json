{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pegatech/Downloads/todo_react_app/src/feature/todo/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    title: ''\n  });\n\n  const submitUpdate = title => {\n    updateTodo(edit._id, title);\n    setEdit({\n      _id: null,\n      title: ''\n    });\n  };\n\n  if (todos.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-body shadow-sm text-center\",\n      style: {\n        margin: 15\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-black-50\",\n        children: \"Empty press 'Add todo'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-black-50\",\n        children: \"for add new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (edit._id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo._id),\n      children: todo.title\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo._id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          _id: todo._id,\n          title: todo.title\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Todo, \"sE5d5uCyi0j1waY62LzoC5bP4RE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/pegatech/Downloads/todo_react_app/src/feature/todo/Todo.jsx"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","title","submitUpdate","_id","length","margin","map","todo","index","isComplete","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AAAA;;AAC9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACK,GAAN,EAAWF,KAAX,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJI,MAAAA,GAAG,EAAE,IADD;AAEJF,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIP,KAAK,CAACU,MAAN,IAAgB,CAApB,EAAuB;AACnB,wBAAO;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA7D;AAAA,8BACH;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH;;AAED,MAAIP,IAAI,CAACK,GAAT,EAAc;AACV,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEL,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOR,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACI,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADvD;AAAA,4BAII;AAAoB,MAAA,OAAO,EAAE,MAAMd,YAAY,CAACY,IAAI,CAACJ,GAAN,CAA/C;AAAA,gBACKI,IAAI,CAACN;AADV,OAAUM,IAAI,CAACJ,GAAf;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBACCI,IAAI,CAACG;AADN;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACI,QAAA,OAAO,EAAE,MAAMd,UAAU,CAACW,IAAI,CAACJ,GAAN,CAD7B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC;AAAEI,UAAAA,GAAG,EAAEI,IAAI,CAACJ,GAAZ;AAAiBF,UAAAA,KAAK,EAAEM,IAAI,CAACN;AAA7B,SAAD,CAD1B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,KAESO,KAFT;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAyBH,CAlDD;;GAAMf,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n    const [edit, setEdit] = useState({\n        id: null,\n        title: ''\n    });\n\n    const submitUpdate = title => {\n        updateTodo(edit._id, title);\n        setEdit({\n            _id: null,\n            title: ''\n        });\n    };\n   \n    if (todos.length <= 0) {\n        return <div className='card card-body shadow-sm text-center' style={{ margin: 15 }}>\n            <h3 className='text-black-50'>Empty press 'Add todo'</h3>\n            <h3 className='text-black-50'>for add new todo</h3>\n        </div>\n    }\n\n    if (edit._id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    return todos.map((todo, index) => (\n        <div\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n            key={index}\n        >\n            <div key={todo._id} onClick={() => completeTodo(todo._id)}>\n                {todo.title}\n            </div>\n            <div>\n            {todo.description}\n            </div>\n            <div className='icons'>\n                <RiCloseCircleLine\n                    onClick={() => removeTodo(todo._id)}\n                    className='delete-icon'\n                />\n                <TiEdit\n                    onClick={() => setEdit({ _id: todo._id, title: todo.title })}\n                    className='edit-icon'\n                />\n            </div>\n        </div>\n    ));\n\n\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}