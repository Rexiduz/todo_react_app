{"ast":null,"code":"import axios from \"axios\";\nvar SERVER_URL = 'https://candidate.neversitup.com/todo';\nconst api = axios.create({\n  baseURL: SERVER_URL\n});\napi.interceptors.request.use(async config => {\n  const token = localStorage.token; // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmIyN2MxOTgyNWFhNTI5MmIxMDgwZjUiLCJpYXQiOjE2MDU3NTI2ODEsImV4cCI6MTYwNTc2MzQ4MX0.XFWee4i4jXshAixwDq7P0gtjCIgmEZ-OU4NHHUPP3DY'\n\n  if (token) {\n    config.headers.common = {\n      Authorization: `Bearer ${token}`\n    };\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nconst client = axios.create({\n  url: SERVER_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconsole.log('client : ', client);\nexport { client, api };","map":{"version":3,"sources":["/Users/pegatech/Downloads/todo_react_app/src/shared/api/index.js"],"names":["axios","SERVER_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","headers","common","Authorization","error","Promise","reject","client","url","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,UAAU,GAAG,uCAAjB;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEH;AADc,CAAb,CAAZ;AAIAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,MAAOC,MAAP,IAAkB;AAC7C,QAAMC,KAAK,GAAGC,YAAY,CAACD,KAA3B,CAD6C,CAE7C;;AACA,MAAIA,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACG,OAAP,CAAeC,MAAf,GAAwB;AACtBC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AADT,KAAxB;AAGD;;AACD,SAAOD,MAAP;AACD,CATD,EASG,UAAUM,KAAV,EAAiB;AAClB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXD;AAeA,MAAMG,MAAM,GAAGjB,KAAK,CAACG,MAAN,CAAa;AAC1Be,EAAAA,GAAG,EAAEjB,UADqB;AAE1BU,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFiB,CAAb,CAAf;AAMAQ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAA0BH,MAA1B;AACA,SAASA,MAAT,EAAiBf,GAAjB","sourcesContent":["import axios from \"axios\";\nvar SERVER_URL = 'https://candidate.neversitup.com/todo'\n\nconst api = axios.create({\n  baseURL: SERVER_URL\n});\n\napi.interceptors.request.use(async (config) => {\n  const token = localStorage.token;\n  // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmIyN2MxOTgyNWFhNTI5MmIxMDgwZjUiLCJpYXQiOjE2MDU3NTI2ODEsImV4cCI6MTYwNTc2MzQ4MX0.XFWee4i4jXshAixwDq7P0gtjCIgmEZ-OU4NHHUPP3DY'\n  if (token) {\n    config.headers.common = {\n      Authorization: `Bearer ${token}`,\n    };\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n\n\nconst client = axios.create({\n  url: SERVER_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconsole.log('client : ' , client)\nexport { client, api };\n"]},"metadata":{},"sourceType":"module"}