{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pegatech/Downloads/todo_react_app/src/feature/todo/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { getTodoList, createTodo, editTodo, deleteTodo } from '../todo/todo-api-service';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    // console.log(localStorage.getItem('token'))\n    if (!localStorage.getItem('token')) {\n      history.push(`/`);\n      return;\n    }\n\n    todoList();\n    return () => {};\n  }, []);\n\n  const todoList = async () => {\n    let todos = await getTodoList();\n    setTodos(todos.data);\n  };\n\n  const addTodo = async todo => {\n    let data = await createTodo(todo);\n\n    if (data) {\n      const newTodos = [todo, ...todos];\n      setTodos(newTodos);\n      console.log(...todos);\n    }\n  };\n\n  const updateTodo = async (todoId, newValue) => {\n    let data = await editTodo(todoId, newValue);\n\n    if (data) {\n      setTodos(prev => prev.map(item => item._id === todoId ? newValue : item));\n    }\n  };\n\n  const removeTodo = async id => {\n    console.log('id : ', id);\n    let data = await deleteTodo(id);\n    const removedArr = [...todos].filter(todo => todo._id !== id);\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row justify-content-center pt-5 pl-3 pr-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"IeCshaNMGsyAF5JKi5JhoHtB80U=\", false, function () {\n  return [useHistory];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/pegatech/Downloads/todo_react_app/src/feature/todo/TodoList.jsx"],"names":["React","useState","useEffect","useContext","TodoForm","Todo","getTodoList","createTodo","editTodo","deleteTodo","useHistory","Axios","TodoList","todos","setTodos","history","localStorage","getItem","push","todoList","data","addTodo","todo","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","_id","removeTodo","id","removedArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { getTodoList, createTodo, editTodo, deleteTodo } from '../todo/todo-api-service'\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const history = useHistory();\n\n\n\n  useEffect(() => {\n    // console.log(localStorage.getItem('token'))\n    if (!localStorage.getItem('token')) {\n      history.push(`/`);\n      return;\n    }\n\n    todoList()\n    return () => {\n\n    }\n  }, [])\n\n  const todoList = async () => {\n\n    let todos = await getTodoList()\n    setTodos(todos.data)\n  }\n\n  const addTodo = async todo => {\n\n    let data = await createTodo(todo)\n\n    if (data) {\n      const newTodos = [todo, ...todos];\n\n      setTodos(newTodos);\n      console.log(...todos);\n    }\n\n  };\n\n  const updateTodo = async (todoId, newValue) => {\n  \n    let data = await editTodo(todoId, newValue)\n    \n    if (data) {\n      setTodos(prev => prev.map(item => (item._id === todoId ? newValue : item)));\n    }\n\n  };\n\n  const removeTodo = async id => {\n    console.log('id : ' , id)\n    let data = await deleteTodo(id)\n    const removedArr = [...todos].filter(todo => todo._id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <section className=\"row justify-content-center pt-5 pl-3 pr-3\">\n        <h1>Todo List?</h1>\n      </section>\n\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}